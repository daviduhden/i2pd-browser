#!/bin/sh

# See the LICENSE file at the top of the project tree for copyright and license details.

# This script automates the process of preparing Firefox ESR for its use with I2Pd.
# It downloads the specified version of Firefox, verifies its integrity,extracts it, 
# removes unnecessary files, updates configuration settings and extensions, and 
# finally copies necessary scripts and configurations for the I2Pd Browser.

# Set the directory to the script's location
dir=$(dirname "$0")
cd "$dir" || exit 1

# Detect the system architecture
arch=$(uname -m)

# Set variables
language="en-US"
version="140.3.1esr"
ftpmirror="https://ftp.mozilla.org/pub/firefox/releases/$version"

# Check the system architecture
if [ "$arch" = "amd64" ] || [ "$arch" = "x86_64" ]; then
	arch=x86_64
elif [ "$arch" = "i386" ] || [ "$arch" = "i686" ]; then
	arch=i686
else
	echo "Your system architecture is not supported."
	exit 1
fi

# Check if 'curl' is installed
if ! command -v curl >/dev/null 2>&1; then
	echo "'cURL' does not seem to be installed. The script needs it!"
	exit 1
fi

echo "This script is preparing Firefox version $version for its use with I2Pd"

# Firefox package info
file="firefox-$version.tar.xz"
filepath="linux-$arch/$language/$file"

# Download Firefox
echo "Downloading Firefox version $version..."
curl -L -f -# -O "$ftpmirror/$filepath" || {
	echo "[Error] Can't download file. Check your internet connectivity."
	exit 1
}

# Verify the downloaded file exists
if [ ! -f "$file" ]; then
	echo "[Error] Can't find downloaded file. Does it really exist?"
	exit 1
fi

# Download and check the checksum file
echo "Downloading checksum file and checking SHA512 checksum"
curl -L -f -# -O "$ftpmirror/SHA512SUMS" || {
	echo "[Error] Can't download SHA512SUMS."
	exit 1
}
recv_sum=$(grep "$filepath" SHA512SUMS | cut -c-128)
file_sum=$(sha512sum "$file" | cut -c-128)
if [ "$recv_sum" != "$file_sum" ]; then
	echo "[Error] File checksum failed!"
	exit 1
else
	echo "Checksum correct."
	rm -f SHA512SUMS
fi

# Extract the downloaded archive (.xz)
echo "Extracting the archive, please wait..."
[ -d "../browser" ] && rm -r ../browser
tar xfJ "$file"
rm "$file"
mv firefox ../browser
mkdir -p ../browser/data

# Remove unnecessary files
echo "Removing unnecessary files..."
rm -f ../browser/crashreporter*
rm -f ../browser/minidump-analyzer
rm -f ../browser/pingsender
rm -f ../browser/precomplete
rm -f ../browser/removed-files
rm -f ../browser/update*
rm -f ../browser/Throbber-small.gif
rm -f ../browser/browser/crashreporter-override.ini
rm -f ../browser/browser/features/formautofill@mozilla.org.xpi
rm -f ../browser/browser/features/screenshots@mozilla.org.xpi
rm -rf ../browser/icons

# Update configuration files
echo "Updating configuration files..."
sed -i 's/Enabled=1/Enabled=0/g' ../browser/application.ini || true
sed -i 's/ServerURL=.*/ServerURL=-/' ../browser/application.ini || true

# Download the NoScript extension
echo "Downloading the NoScript extension..."
curl -L -f -# -o ../browser/browser/extensions/{73a6fe31-595d-460b-a920-fcc0f8843232}.xpi \
	"https://addons.mozilla.org/firefox/downloads/latest/noscript/latest.xpi"

# Add standard configuration files
echo "Adding standard configs..."
cp -r preferences/* ../browser/
cp -r profile/* ../browser/data/

# Copy desktop launch scripts
echo "Copying the desktop launching scripts..."
cp -r scripts/* ../browser/
cp scripts/start-i2pd-browser.desktop ../

echo "Finished!"
