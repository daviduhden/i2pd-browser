#!/bin/sh

# See the LICENSE file at the top of the project tree for copyright and license details.
#
# This script automates the process of preparing Firefox ESR for its use with I2Pd.
# It discovers the latest Firefox ESR, downloads it, verifies its integrity,
# extracts it, removes unnecessary files, updates configuration settings and extensions,
# and finally copies necessary scripts and configurations for the I2Pd Browser.

set -e

# Set the directory to the script's location
dir=$(dirname "$0")
cd "$dir" || exit 1

# Detect the system architecture
arch=$(uname -m)

# ---- Config ----
language="${language:-en-US}"
ESR_PRODUCT="${ESR_PRODUCT:-firefox-esr-latest}"

# Check if required tools exist
command -v curl >/dev/null 2>&1 || { echo "'cURL' does not seem to be installed. The script needs it!"; exit 1; }
command -v sha512sum >/dev/null 2>&1 || { echo "'sha512sum' is required for integrity verification."; exit 1; }
command -v grep >/dev/null 2>&1 || { echo "'grep' is required."; exit 1; }

# Map arch for redirector (os=) and for the checksums path (linux-*)
case "$arch" in
	amd64|x86_64)
		arch=x86_64
		fx_os="linux64"
		fx_dir="linux-x86_64"
		;;
	i386|i686)
		arch=i686
		fx_os="linux"
		fx_dir="linux-i686"
		;;
	*)
		echo "Your system architecture is not supported."
		exit 1
		;;
esac

echo "Discovering latest Firefox ESR for $fx_os ($arch), lang: $language ..."
final_url=$(curl -s -L -I -o /dev/null -w '%{url_effective}' \
	"https://download.mozilla.org/?product=${ESR_PRODUCT}&os=${fx_os}&lang=${language}")

if [ -z "$final_url" ]; then
	echo "[Error] Couldn't resolve Firefox download URL via redirector."
	exit 1
fi

file=$(basename "$final_url")
# Try to extract version from filename
version=$(printf "%s" "$file" | sed -E 's/^firefox-([0-9.]+esr)\.tar\.(xz|bz2)$/\1/')

if [ -z "$version" ]; then
	echo "[Error] Couldn't parse version from filename: $file"
	exit 1
fi

ftpmirror="https://ftp.mozilla.org/pub/firefox/releases/$version"
filepath="$fx_dir/$language/$file"

echo "This script is preparing Firefox version $version for its use with I2Pd"

# Download Firefox (from the resolved final URL)
echo "Downloading Firefox $version..."
curl -L -f -# -O "$final_url" || {
	echo "[Error] Can't download file. Check your internet connectivity."
	exit 1
}

# Verify the downloaded file exists
if [ ! -f "$file" ]; then
	echo "[Error] Can't find downloaded file. Does it really exist?"
	exit 1
fi

# Download and check the checksum file
echo "Downloading checksum file and checking SHA512 checksum"
curl -L -f -# -O "$ftpmirror/SHA512SUMS" || {
	echo "[Error] Can't download SHA512SUMS."
	exit 1
}
# Use an anchored grep to reduce ambiguity
recv_sum=$(grep " $filepath\$" SHA512SUMS | cut -c-128)
file_sum=$(sha512sum "$file" | cut -c-128)
if [ "$recv_sum" != "$file_sum" ] || [ -z "$recv_sum" ]; then
	echo "[Error] File checksum failed!"
	exit 1
else
	echo "Checksum correct."
	rm -f SHA512SUMS
fi

# Extract the downloaded archive
echo "Extracting the archive, please wait..."
[ -d "../browser" ] && rm -r ../browser
case "$file" in
	*.tar.xz)  tar xJf "$file" ;;
	*.tar.bz2) tar xjf "$file" ;;
	*)         tar xf "$file"  ;;
esac
rm "$file"
mv firefox ../browser
mkdir -p ../browser/data

# Remove unnecessary files
echo "Removing unnecessary files..."
rm -f ../browser/crashreporter*
rm -f ../browser/minidump-analyzer
rm -f ../browser/pingsender
rm -f ../browser/precomplete
rm -f ../browser/removed-files
rm -f ../browser/update*
rm -f ../browser/Throbber-small.gif
rm -f ../browser/browser/crashreporter-override.ini
rm -f ../browser/browser/features/formautofill@mozilla.org.xpi
rm -f ../browser/browser/features/screenshots@mozilla.org.xpi
rm -rf ../browser/icons

# Update configuration files
echo "Updating configuration files..."
sed -i 's/Enabled=1/Enabled=0/g' ../browser/application.ini || true
sed -i 's/ServerURL=.*/ServerURL=-/' ../browser/application.ini || true

# Download the NoScript extension
echo "Downloading the NoScript extension..."
mkdir -p ../browser/browser/extensions
curl -L -f -# -o ../browser/browser/extensions/{73a6fe31-595d-460b-a920-fcc0f8843232}.xpi \
	"https://addons.mozilla.org/firefox/downloads/latest/noscript/latest.xpi"

# Add standard configuration files
echo "Adding standard configs..."
cp -r preferences/* ../browser/
cp -r profile/* ../browser/data/

# Copy desktop launch scripts
echo "Copying the desktop launching scripts..."
cp -r scripts/* ../browser/
cp scripts/start-i2pd-browser.desktop ../

echo "Finished!"
