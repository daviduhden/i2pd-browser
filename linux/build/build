#!/bin/sh

# Copyright (c) 2013-2025, The PurpleI2P Project
# This file is part of Purple I2P project and licensed under BSD3
# See full license text in LICENSE file at top of project tree

set -e

dir=${0%/*}; [ "$dir" = "$0" ] && dir="."
cd "$dir"

# Locale: only two variants (ru or en-US) for this bundle
lang_src="${LANG:-en_US}"
case "$(printf '%s' "$lang_src" | tr '[:upper:]' '[:lower:]')" in
  ru* ) fx_lang="ru" ;;
  *   ) fx_lang="en-US" ;;
esac

: "${ESR_PRODUCT:=firefox-esr-latest}"

# Architecture mapping for download/checksum paths
arch=$(uname -m)
fx_os="linux64"; fx_dir="linux-x86_64"
case "$arch" in
  amd64|x86_64) fx_os="linux64"; fx_dir="linux-x86_64" ;;
  i?86)         fx_os="linux";   fx_dir="linux-i686"    ;;
  # Optional: enable when Mozilla exposes aarch64 in the redirector consistently
  # aarch64|arm64) fx_os="linux64"; fx_dir="linux-aarch64" ;;
esac

curl -V >/dev/null 2>&1 || { echo "'cURL' is required."; exit 1; }
command -v sha512sum >/dev/null || { echo "'sha512sum' is required."; exit 1; }

echo "Preparing Firefox ESR for I2Pd..."
final_url=$(curl -s -L -I -o /dev/null -w '%{url_effective}' \
  "https://download.mozilla.org/?product=${ESR_PRODUCT}&os=${fx_os}&lang=${fx_lang}")
[ -n "$final_url" ] || { echo "[Error] Couldn't resolve Firefox URL."; exit 1; }

file=$(basename "$final_url")
echo "Downloading Firefox: $file"
curl -L -f -# -O "$final_url"

# Extract version from filename (e.g., 140.3.1esr)
version=$(printf "%s" "$file" | sed -E 's/^firefox-([^.]*(\.[^.]*)*)\.(tar\.(bz2|xz))$/\1/')
[ -n "$version" ] || { echo "[Error] Couldn't parse Firefox version."; exit 1; }

# Verify checksum against official mirror
ftpmirror="https://ftp.mozilla.org/pub/firefox/releases/${version}"
filepath="${fx_dir}/${fx_lang}/${file}"

echo "Downloading SHA512SUMS and verifying..."
curl -L -f -# -O "${ftpmirror}/SHA512SUMS"
recv_sum=$(grep " ${filepath}\$" SHA512SUMS | cut -c-128)
file_sum=$(sha512sum "$file" | cut -c-128)
[ "$recv_sum" = "$file_sum" ] || { echo "[Error] File checksum failed!"; rm -f SHA512SUMS; exit 1; }
rm -f SHA512SUMS
echo "Checksum OK."

echo "Extracting..."
case "$file" in
  *.tar.xz)  tar xJf "$file" ;;
  *.tar.bz2) tar xjf "$file" ;;
  *)         tar xf "$file" ;;
esac
rm -f "$file"
mv firefox ../browser
mkdir -p ../browser/data

# Remove unneeded files
rm -f  ../browser/crashreporter* ../browser/minidump-analyzer ../browser/pingsender \
       ../browser/precomplete ../browser/removed-files ../browser/update*
rm -f  ../browser/Throbber-small.gif ../browser/browser/crashreporter-override.ini
rm -f  ../browser/browser/features/formautofill@mozilla.org.xpi \
       ../browser/browser/features/screenshots@mozilla.org.xpi
rm -rf ../browser/icons

# Tame updates
sed -i 's/Enabled=1/Enabled=0/g' ../browser/application.ini || true
sed -i 's/ServerURL=.*/ServerURL=-/' ../browser/application.ini || true

echo "Downloading language packs & dictionaries..."
mkdir -p ../browser/browser/extensions

# Version-pinned language packs (match the exact Firefox you downloaded)
xpi_base="https://releases.mozilla.org/pub/firefox/releases/${version}/xpi"

# Always add RU so users can switch from EN
curl -L -f -# -o ../browser/browser/extensions/langpack-ru@firefox.mozilla.org.xpi \
  "${xpi_base}/ru.xpi"

# Add en-US only if base build is RU (en-US build doesn't need en-US langpack)
if [ "$fx_lang" = "ru" ]; then
  curl -L -f -# -o ../browser/browser/extensions/langpack-en-US@firefox.mozilla.org.xpi \
    "${xpi_base}/en-US.xpi"
fi

# Dictionaries (not version-locked)
curl -L -f -# -o ../browser/browser/extensions/ru@dictionaries.addons.mozilla.org.xpi \
  "https://addons.mozilla.org/firefox/downloads/latest/russian-spellchecking-dic-3703/latest.xpi"
curl -L -f -# -o ../browser/browser/extensions/en-US@dictionaries.addons.mozilla.org.xpi \
  "https://addons.mozilla.org/firefox/downloads/latest/english-us-dictionary/latest.xpi"

echo "Downloading NoScript (latest)..."
curl -L -f -# -o ../browser/browser/extensions/{73a6fe31-595d-460b-a920-fcc0f8843232}.xpi \
  "https://addons.mozilla.org/firefox/downloads/latest/noscript/latest.xpi"

echo "Adding standard configs..."
cp -r preferences/* ../browser/
cp -r profile/* ../browser/data/
if [ "$fx_lang" = "ru" ]; then
  cp -r profile-ru/* ../browser/data/
else
  cp -r profile-en/* ../browser/data/
fi

echo "Copying desktop launch scripts..."
cp -r scripts/* ../browser/
cp scripts/start-i2pd-browser.desktop ../

echo "... finished"
